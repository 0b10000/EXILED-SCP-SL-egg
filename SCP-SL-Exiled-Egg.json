{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v1",
        "update_url": null
    },
    "exported_at": "2021-01-31T14:23:36-08:00",
    "name": "EXILED SCP:SL Egg",
    "author": "info@goover.de",
    "description": "Egg for SCP: Secret Laboratory Dedicated Linux Server",
    "features": null,
    "images": [
        "quay.io\/parkervcp\/pterodactyl-images:debian_mono-6-complete"
    ],
    "startup": ".\/start.sh {{SERVER_PORT}}",
    "config": {
        "files": "{\r\n    \"config_gameplay.txt\": {\r\n        \"parser\": \"yaml\",\r\n        \"find\": {\r\n            \"server_ip\": \"0.0.0.0\",\r\n            \"forward_ports\": \"false\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Waiting for players..\",\r\n    \"userInteraction\": []\r\n}",
        "logs": "{\r\n    \"custom\": false,\r\n    \"location\": \"logs\/latest.log\"\r\n}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# steamcmd Base Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\n# Image to install with is 'debian:buster-slim'\r\napt -y update\r\napt -y --no-install-recommends install curl lib32gcc1 ca-certificates\r\napt-get update\r\napt-get -y install libicu63\r\napt-get update\r\napt-get -y install wget\r\napt-get update\r\napt-get -y install libsdl2-2.0-0:i386\r\n\r\n\r\n## download and install steamcmd\r\ncd \/tmp\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\ncd \/mnt\/server\/steamcmd\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\nif [ \"${BETA_TAG}\" == \"none\" ]; then\r\n    .\/steamcmd.sh +login anonymous +force_install_dir \/mnt\/server +app_update ${SRCDS_APPID} validate +quit\r\nelse\r\n    .\/steamcmd.sh +login anonymous +force_install_dir \/mnt\/server +app_update ${SRCDS_APPID} ${BETA_TAG} validate +quit\r\nfi\r\n## install game using steamcmd\r\n\r\n## set up 32 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n\r\ncd \/mnt\/server\r\n\r\nif [ \"${INSTALL_MULTIADMIN}\" == \"true\" ]; then \r\n    echo \"Installing MultiAdmin..\"\r\n    rm MultiAdmin.exe\r\n    wget https:\/\/github.com\/ServerMod\/MultiAdmin\/releases\/download\/3.4.0.0-alpha\/MultiAdmin.exe\r\n    chmod +x MultiAdmin.exe\r\n    \r\n    echo \"Configuring scp_multiadmin.cfg\"\r\n    rm scp_multiadmin.cfg\r\n    touch \"scp_multiadmin.cfg\"\r\n    echo \"use_new_input_system: false\" > scp_multiadmin.cfg\r\n    echo \"Configure scp_multiadmin.cfg done.\"\r\nelse\r\n    echo \"Using LocalAdmin.\"\r\nfi\r\n\r\necho \"Configuring start.sh\"\r\nrm start.sh\r\ntouch \"start.sh\"\r\nchmod +x .\/start.sh\r\n\r\nif [ \"${INSTALL_BOT}\" == \"true\" ] && [ \"${INSTALL_MULTIADMIN}\" == \"false\" ] \r\nthen\r\n    echo \"#!\/bin\/bash\r\n    mono Bot\/DiscordIntegration_Bot.exe > \/dev\/null &\r\n    .\/LocalAdmin \\${SERVER_PORT}\" >> start.sh\r\n    echo \"Finished configuring start.sh for LocalAdmin and Discord Integration.\"\r\n\r\nelif [ \"${INSTALL_BOT}\" == \"false\" ] && [ \"${INSTALL_MULTIADMIN}\" == \"false\" ]\r\nthen\r\necho \"#!\/bin\/bash\r\n    .\/LocalAdmin \\${SERVER_PORT}\" >> start.sh\r\n    echo \"Finished configuring start.sh for LocalAdmin.\"\r\n\r\nelif [ \"${INSTALL_BOT}\" == \"true\" ] \r\n\r\nthen\r\n    echo \"#!\/bin\/bash\r\n    mono Bot\/DiscordIntegration_Bot.exe > \/dev\/null &\r\n    mono MultiAdmin.exe --port \\${SERVER_PORT}\" >> start.sh\r\n    echo \"Finished configuring start.sh for MultiAdmin and Discord Integration.\"\r\n\r\nelse\r\n    echo \"#!\/bin\/bash\r\n    mono MultiAdmin.exe --port \\$1\" >> start.sh\r\n    echo \"Finished configuring start.sh for MultiAdmin.\"\r\nfi\r\n\r\nif [ \"${INSTALL_BOT}\" == \"true\" ]; then\r\n    if [ \"${BOT_VERSION}\" == \"latest\" ]; then\r\n        echo \"Installing latest Discord Integration bot version.\"\r\n        wget https:\/\/github.com\/galaxy119\/DiscordIntegration\/releases\/latest\/download\/Bot.tar.gz\r\n        rm -r Bot\r\n        tar xzvf Bot.tar.gz\r\n        rm Bot.tar.gz\r\n        chmod +x Bot\/DiscordIntegration_Bot.exe\r\n    else\r\n        echo \"Installing Discord Integration Version: ${BOT_VERSION}..\"\r\n        wget https:\/\/github.com\/galaxy119\/DiscordIntegration\/releases\/download\/${BOT_VERSION}\/Bot.tar.gz\r\n        rm -r Bot\r\n        tar xzvf Bot.tar.gz\r\n        rm Bot.tar.gz\r\n        chmod +x Bot\/DiscordIntegration_Bot.exe\r\n    fi\r\nelse\r\n    echo \"Skipping bot install...\"\r\n\r\nfi\r\n\r\nif [ \"${INSTALL_EXILED}\" == \"true\" ]; then\r\n    echo \"Downloading EXILED..\"\r\n    mkdir .config\/\r\n    echo \"Downloading latest EXILED Installer\"\r\n    wget https:\/\/github.com\/galaxy119\/EXILED\/releases\/latest\/download\/Exiled.Installer-Linux\r\n    echo \"Installing EXILED..\"\r\n    chmod +x .\/Exiled.Installer-Linux\r\n    .\/Exiled.Installer-Linux --pre-releases\r\n    rm Exiled.Installer-Linux\r\nelse\r\n    echo \"Skipping Exiled installation.\"\r\n\r\nfi\r\n\r\nif [ \"${INSTALL_INTEGRATION}\" == \"true\" ]; then\r\n    if [ \"${BOT_VERSION}\" == \"latest\" ]; then\r\n        echo Installing Discord Latest Integration Plugin...\r\n        cd .config\/EXILED\/Plugins\r\n\r\n        rm DiscordIntegration_Plugin.dll\r\n        echo Grabbing plugin.\r\n        wget https:\/\/github.com\/galaxy119\/DiscordIntegration\/releases\/latest\/download\/DiscordIntegration_Plugin.dll\r\n\r\n        rm dependencies.tar.gz\r\n        echo Grabbing dependencies.\r\n        wget https:\/\/github.com\/galaxy119\/DiscordIntegration\/releases\/latest\/download\/dependencies.tar.gz\r\n\r\n        echo Installing dependencies.\r\n        tar -xvf dependencies.tar.gz\r\n        rm dependencies.tar.gz\r\n\r\n    else\r\n        echo \"Installing Discord Integration Plugin Version: ${BOT_VERSION}\"\r\n    fi\r\nfi\r\n\r\nif [ \"${INSTALL_BOT}\" == \"true\" ]\r\nthen\r\n    echo \"Installation complete. Dont forget to configure the discord bot in IntegrationBotConfig.json\"\r\nelse\r\n    echo \"!!Installation complete!!\"\r\n\r\nfi",
            "container": "debian:buster-slim",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "APPID",
            "description": "",
            "env_variable": "SRCDS_APPID",
            "default_value": "996560",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20"
        },
        {
            "name": "Beta Tag",
            "description": "",
            "env_variable": "BETA_TAG",
            "default_value": "none",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|max:20"
        },
        {
            "name": "Install Exiled?",
            "description": "",
            "env_variable": "INSTALL_EXILED",
            "default_value": "true",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20"
        },
        {
            "name": "Install Discord Integration Bot?",
            "description": "",
            "env_variable": "INSTALL_BOT",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20"
        },
        {
            "name": "Discord Integration Version",
            "description": "Check versions at https:\/\/github.com\/galaxy119\/DiscordIntegration\/releases Version numbers look like \"2.3.0\". Otherwise use \"latest\" to download the latest version.",
            "env_variable": "BOT_VERSION",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20"
        },
        {
            "name": "Install MultiAdmin?",
            "description": "Should you install multiadmin or not?",
            "env_variable": "INSTALL_MULTIADMIN",
            "default_value": "true",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20"
        },
        {
            "name": "Install Discord Integration Plugin?",
            "description": "Intstalls the discord integration plugin.",
            "env_variable": "INSTALL_INTEGRATION",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20"
        }
    ]
}