{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v1",
        "update_url": null
    },
    "exported_at": "2021-07-09T22:18:38-07:00",
    "name": "EXILED SCP:SL Egg",
    "author": "pwolfe@stealthturtle.com",
    "description": "Egg for SCP: Secret Laboratory Dedicated Linux Server",
    "features": null,
    "images": [
        "quay.io\/parkeymon\/exiled-scpsl-image:latest"
    ],
    "file_denylist": [],
    "startup": ".\/start.sh {{SERVER_PORT}}",
    "config": {
        "files": "{\r\n    \"config_gameplay.txt\": {\r\n        \"parser\": \"yaml\",\r\n        \"find\": {\r\n            \"server_ip\": \"0.0.0.0\",\r\n            \"forward_ports\": \"false\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Waiting for players..\",\r\n    \"userInteraction\": []\r\n}",
        "logs": "{\r\n    \"custom\": false,\r\n    \"location\": \"logs\/latest.log\"\r\n}",
        "stop": "exit"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# steamcmd Base Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\n\r\necho \"\r\n$(tput setaf 4)  ____________________________       ______________     \r\n$(tput setaf 4) \/   _____\/\\_   ___ \\______   \\ \/\\  \/   _____\/|    |    \r\n$(tput setaf 4) \\_____  \\ \/    \\  \\\/|     ___\/ \\\/  \\_____  \\ |    |    \r\n$(tput setaf 4) \/        ||     \\___|    |     \/\\  \/        \\|    |___ \r\n$(tput setaf 4)\/_________\/ \\________\/____|     \\\/ \/_________\/|________|\r\n$(tput setaf 1) ___                 __          __   __                \r\n$(tput setaf 1)|   | ____   _______\/  |______  |  | |  |   ___________ \r\n$(tput setaf 1)|   |\/    \\ \/  ___\/\\   __\\__  \\ |  | |  | _\/ __ \\_  __ |\r\n$(tput setaf 1)|   |   |  |\\___ \\  |  |  \/ __ \\|  |_|  |_\\  ___\/|  | \\\/\r\n$(tput setaf 1)|___|___|__\/______> |__| (______|____|____\/\\___  |__|       \r\n$(tput setaf 0)\r\n\"\r\n\r\necho \"\r\n$(tput setaf 2)This installer was created by $(tput setaf 1)Parkeymon#0001\r\n$(tput setaf 2)You can find the latest version here: https:\/\/github.com\/Parkeymon\/EXILED-SCP-SL-egg\r\n$(tput setaf 0)\r\n\"\r\n\r\n# Download SteamCMD and Install\r\ncd \/tmp || {\r\n  echo \"$(tput setaf 1) FAILED TO MOUNT TO \/TMP\"\r\n  exit\r\n  }\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\ncd \/mnt\/server\/steamcmd || {\r\n  echo \"$(tput setaf 1) FAILED TO MOUNT TO \/mnt\/server\/steamcmd\"\r\n  exit\r\n  }\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\nif [ \"${BETA_TAG}\" == \"none\" ]; then\r\n    .\/steamcmd.sh +login anonymous +force_install_dir \/mnt\/server +app_update \"${SRCDS_APPID}\" validate +quit\r\nelse\r\n    .\/steamcmd.sh +login anonymous +force_install_dir \/mnt\/server +app_update \"${SRCDS_APPID}\" \"${BETA_TAG}\" validate +quit\r\nfi\r\n# Install SL with SteamCMD\r\n\r\n## set up 32 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n\r\ncd \/mnt\/server || {\r\n  echo \"$(tput setaf 1) FAILED TO MOUNT TO \/mnt\/server\"\r\n  exit\r\n}\r\n\r\nif [ \"${INSTALL_MULTIADMIN}\" == \"true\" ]; then \r\n    echo \"Installing MultiAdmin..\"\r\n    rm MultiAdmin.exe\r\n    wget https:\/\/github.com\/ServerMod\/MultiAdmin\/releases\/download\/3.4.0.0-alpha\/MultiAdmin.exe\r\n    chmod +x MultiAdmin.exe\r\n    \r\n    echo \"Configuring scp_multiadmin.cfg\"\r\n    rm scp_multiadmin.cfg\r\n    touch \"scp_multiadmin.cfg\"\r\n    echo \"use_new_input_system: false\" > scp_multiadmin.cfg\r\n    echo \"Configure scp_multiadmin.cfg done.\"\r\nelse\r\n    echo \"$(tput setaf 4)Using LocalAdmin.$(tput setaf 0)\"\r\nfi\r\n\r\necho \"$(tput setaf 4)Configuring start.sh$(tput setaf 0)\"\r\nrm start.sh\r\ntouch \"start.sh\"\r\nchmod +x .\/start.sh\r\n\r\nif [ \"${INSTALL_BOT}\" == \"true\" ] && [ \"${INSTALL_MULTIADMIN}\" == \"false\" ] \r\nthen\r\n    echo \"#!\/bin\/bash\r\n    node discordIntegration.js > \/dev\/null &\r\n    .\/LocalAdmin \\${SERVER_PORT}\" >> start.sh\r\n    echo \"$(tput setaf 4)Finished configuring start.sh for LocalAdmin and Discord Integration.$(tput setaf 0)\"\r\n\r\nelif [ \"${INSTALL_BOT}\" == \"false\" ] && [ \"${INSTALL_MULTIADMIN}\" == \"false\" ]\r\nthen\r\necho \"#!\/bin\/bash\r\n    .\/LocalAdmin \\${SERVER_PORT}\" >> start.sh\r\n    echo \"$(tput setaf 4)Finished configuring start.sh for LocalAdmin.$(tput setaf 0)\"\r\n\r\nelif [ \"${INSTALL_BOT}\" == \"true\" ] \r\n\r\nthen\r\n    echo \"#!\/bin\/bash\r\n    node discordIntegration.js > \/dev\/null &\r\n    mono MultiAdmin.exe --port \\${SERVER_PORT}\" >> start.sh\r\n    echo \"$(tput setaf 4)Finished configuring start.sh for MultiAdmin and Discord Integration.$(tput setaf 0)\"\r\n\r\nelse\r\n    echo \"#!\/bin\/bash\r\n    mono MultiAdmin.exe --port \\$1\" >> start.sh\r\n    echo \"$(tput setaf 4)Finished configuring start.sh for MultiAdmin.$(tput setaf 0)\"\r\nfi\r\n\r\nif [ \"${INSTALL_BOT}\" == \"true\" ]; then\r\n    if [ \"${BOT_VERSION}\" == \"latest\" ]; then\r\n       if [ \"${CONFIG_SAVER}\" == \"true\" ]; then\r\n            # Latest Bot WITH config saver\r\n\r\n            echo \"$(tput setaf 4)Removing old bot version if it still exists.$(tput setaf 0)\"\r\n            rm -r Bot\r\n\r\n            #Config SAVER\r\n            echo \"$(tput setaf 4)Config Saver is $(tput setaf 2)ENABLED\"\r\n            echo \"Making temporary directory\"\r\n            mkdir BotConfigTemp\r\n            echo \"Moving config.\"\r\n            mv config.yml .\/BotConfigTemp\r\n\r\n            echo \"$(tput setaf 4)Installing latest Discord Integration bot version.$(tput setaf 0)\"\r\n            wget https:\/\/github.com\/Exiled-Team\/DiscordIntegration\/releases\/latest\/download\/DiscordIntegration.Bot.tar.gz\r\n            tar xzvf DiscordIntegration.Bot.tar.gz\r\n            rm DiscordIntegration.Bot.tar.gz\r\n            echo \"Deleting config\"\r\n            rm config.yml\r\n            echo \"Replacing Config\"\r\n            mv .\/BotConfigTemp\/config.yml .\/\r\n            echo \"Removing temporary directory\"\r\n            rm -r BotConfigTemp\r\n            echo \"$(tput setaf 4)Your configs have been saved!\"\r\n        \r\n            echo \"$(tput setaf 4)Updating Packages$(tput setaf 0)\"\r\n\r\n            npm i\r\n\r\n        else\r\n            # Latest Bot WITHOUT config saver\r\n\r\n            echo \"$(tput setaf 4)Removing old bot version if it still exists.$(tput setaf 0)\"\r\n            rm -r Bot\r\n\r\n            echo \"$(tput setaf 4)Installing latest Discord Integration bot version.$(tput setaf 0)\"\r\n            wget https:\/\/github.com\/Exiled-Team\/DiscordIntegration\/releases\/latest\/download\/DiscordIntegration.Bot.tar.gz\r\n            tar xzvf DiscordIntegration.Bot.tar.gz\r\n            rm DiscordIntegration.Bot.tar.gz\r\n        \r\n            echo \"$(tput setaf 4)Updating Packages$(tput setaf 0)\"\r\n\r\n            npm i\r\n        fi\r\n    else\r\n        if [ \"${CONFIG_SAVER}\" == \"true\" ]; then\r\n            # Specific Version WITH config saver\r\n\r\n            echo \"$(tput setaf 4)Removing old bot version if it still exists.$(tput setaf 0)\"\r\n            rm -r Bot\r\n\r\n            #Config SAVER\r\n            echo \"$(tput setaf 4)Config Saver is $(tput setaf 2)ENABLED\"\r\n            echo \"Making temporary directory\"\r\n            mkdir BotConfigTemp\r\n            echo \"Moving config.\"\r\n            mv config.yml .\/BotConfigTemp\r\n\r\n            echo \"$(tput setaf 4)Installing Discord Integration bot version: ${BOT_VERSION}...\"\r\n            wget https:\/\/github.com\/Exiled-Team\/DiscordIntegration\/releases\/download\/\"${BOT_VERSION}\"\/Bot.tar.gz\r\n            tar xzvf DiscordIntegration.Bot.tar.gz\r\n            rm DiscordIntegration.Bot.tar.gz\r\n            echo \"Deleting config\"\r\n            rm config.yml\r\n            echo \"Replacing Config\"\r\n            mv .\/BotConfigTemp\/config.yml .\/\r\n            echo \"Removing temporary directory\"\r\n            rm -r BotConfigTemp\r\n            echo \"$(tput setaf 4)Your configs have been saved!\"\r\n\r\n            echo \"$(tput setaf 4)Updating Packages$(tput setaf 0)\"\r\n            npm i\r\n\r\n        else\r\n            # Specific Version WITHOUT config saver\r\n\r\n            echo \"$(tput setaf 4)Removing old bot version if it still exists.$(tput setaf 0)\"\r\n            rm -r Bot\r\n\r\n            echo \"$(tput setaf 4)Installing Discord Integration bot version: ${BOT_VERSION}...\"\r\n            wget https:\/\/github.com\/Exiled-Team\/DiscordIntegration\/releases\/download\/\"${BOT_VERSION}\"\/Bot.tar.gz\r\n            tar xzvf DiscordIntegration.Bot.tar.gz\r\n            rm DiscordIntegration.Bot.tar.gz\r\n        \r\n            echo \"$(tput setaf 4)Updating Packages$(tput setaf 0)\"\r\n            npm i\r\n        fi\r\n    fi\r\nelse\r\n    echo \"$(tput setaf 4)Skipping bot install...$(tput setaf 0)\"\r\n\r\nfi\r\n\r\nif [ \"${INSTALL_EXILED}\" == \"true\" ]; then\r\n    if [ \"${EXILED_PRE}\" == \"true\" ]; then\r\n        echo \"$(tput setaf 4)Downloading $(tput setaf 1)EXILED$(tput setaf 0)..\"\r\n        mkdir .config\/\r\n        echo \"$(tput setaf 4)Downloading latest $(tput setaf 1)EXILED$(tput setaf 4) Installer$(tput setaf 0)\"\r\n        rm Exiled.Installer-Linux\r\n        wget https:\/\/github.com\/galaxy119\/EXILED\/releases\/latest\/download\/Exiled.Installer-Linux\r\n        echo \"$(tput setaf 4)Installing $(tput setaf 1)EXILED (pre-release)$(tput setaf 0)..\"\r\n        chmod +x .\/Exiled.Installer-Linux\r\n        .\/Exiled.Installer-Linux --pre-releases\r\n\r\n    elif [ \"${EXILED_PRE}\" == \"false\" ]; then\r\n        echo \"$(tput setaf 4)Downloading $(tput setaf 1)EXILED$(tput setaf 0)..\"\r\n        mkdir .config\/\r\n        echo \"$(tput setaf 4)Downloading latest $(tput setaf 1)EXILED$(tput setaf 4) Installer$(tput setaf 0)\"\r\n        rm Exiled.Installer-Linux\r\n        wget https:\/\/github.com\/galaxy119\/EXILED\/releases\/latest\/download\/Exiled.Installer-Linux\r\n        echo \"$(tput setaf 4)Installing $(tput setaf 1)EXILED$(tput setaf 0)..\"\r\n        chmod +x .\/Exiled.Installer-Linux\r\n        .\/Exiled.Installer-Linux\r\n    else\r\n        #Installing with specific version.\r\n        echo \"$(tput setaf 4)Downloading $(tput setaf 1)EXILED$(tput setaf 0)..\"\r\n        mkdir .config\/\r\n        echo \"$(tput setaf 4)Downloading latest $(tput setaf 1)EXILED$(tput setaf 4) Installer$(tput setaf 0)\"\r\n        rm Exiled.Installer-Linux\r\n        wget https:\/\/github.com\/galaxy119\/EXILED\/releases\/latest\/download\/Exiled.Installer-Linux\r\n        echo \"$(tput setaf 4)Installing $(tput setaf 1)EXILED$(tput setaf 0)..\"\r\n        chmod +x .\/Exiled.Installer-Linux\r\n        .\/Exiled.Installer-Linux --target-version \"${EXILED_PRE}\"\r\n    fi\r\nelse\r\n    echo \"Skipping Exiled installation.\"\r\nfi\r\n\r\nif [ \"${REMOVE_UPDATER}\" == \"true\" ]; then\r\n    echo \"Removing Exiled updater.\"\r\n    rm .config\/EXILED\/Plugins\/Exiled.Updater.dll\r\nelse\r\n    echo \"Skipping EXILED updater removal.\"\r\nfi\r\n\r\nif [ \"${INSTALL_INTEGRATION}\" == \"true\" ]; then\r\n    if [ \"${BOT_VERSION}\" == \"latest\" ]; then\r\n        echo Installing Discord Latest Integration Plugin...\r\n        #Moves to plugin folder for plugin installation. \r\n        cd .config\/EXILED\/Plugins || {\r\n          echo \"Bot Install Failed\"\r\n          return\r\n          }\r\n\r\n        echo \"Removing old Discord Integration (if it exists)\"\r\n        rm DiscordIntegration_Plugin.dll\r\n        rm DiscordIntegration.dll\r\n\r\n        echo \"Grabbing plugin and dependencies.\"\r\n        wget https:\/\/github.com\/Exiled-Team\/DiscordIntegration\/releases\/latest\/download\/Plugin.tar.gz\r\n\r\n        echo \"Extracting...\"\r\n        tar xzvf Plugin.tar.gz\r\n        rm Plugin.tar.gz\r\n\r\n    else\r\n        echo \"Installing Discord Integration Plugin Version: ${BOT_VERSION}\"\r\n    fi\r\nfi\r\n\r\nif  [ \"${INSTALL_ADMINTOOLS}\" == \"true\" ]; then\r\n    echo \"Removing existing Admin Tools version.\"\r\n    rm AdminTools.dll\r\n    echo \"Installing latest Admin Tools\"\r\n    wget https:\/\/github.com\/Exiled-Team\/AdminTools\/releases\/latest\/download\/AdminTools.dll\r\n\r\nelse\r\n    echo \"Skipping Admin Tools install.\"\r\nfi\r\n\r\nif [ \"${INSTALL_UTILITIES}\" == \"true\" ]; then\r\n    echo \"Removing existing Common Utilities version.\"\r\n    rm Common_Utilities.dll\r\n    echo \"Installing Common Utilities.\"\r\n    wget https:\/\/github.com\/Exiled-Team\/Common-Utils\/releases\/latest\/download\/Common_Utilities.dll\r\nelse\r\n    echo \"Skipping Common Utilities Install\"\r\nfi\r\n\r\nif [ \"${INSTALL_SCPSTATS}\" == \"true\" ]; then\r\n    echo \"Removing existing SCPStats version.\"\r\n    rm SCPStats.dll\r\n    echo \"Installing SCPStats\"\r\n    wget https:\/\/github.com\/SCPStats\/Plugin\/releases\/latest\/download\/SCPStats.dll\r\nelse\r\n    echo \"Skipping SCPStats Install.\"\r\nfi    \r\n\r\nif [ \"${INSTALL_BOT}\" == \"true\" ]\r\nthen\r\n    echo \"Dont forget to configure the discord bot in \/home\/container\/config.yml\"\r\n    echo \"$(tput setaf 2)Installation Complete!$(tput sgr 0)\"\r\nelse\r\n    echo \"$(tput setaf 2)Installation Complete!$(tput sgr 0)\"\r\nfi",
            "container": "quay.io\/parkeymon\/scpsl-install:latest",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "APPID",
            "description": "",
            "env_variable": "SRCDS_APPID",
            "default_value": "996560",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20"
        },
        {
            "name": "Beta Tag",
            "description": "",
            "env_variable": "BETA_TAG",
            "default_value": "none",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|max:20"
        },
        {
            "name": "Install Exiled?",
            "description": "",
            "env_variable": "INSTALL_EXILED",
            "default_value": "true",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20"
        },
        {
            "name": "Use Exiled Pre-Releases?",
            "description": "Whether or not to install a pre-release of EXILED. To install a specific version replace the true/false with the EXILED version number.",
            "env_variable": "EXILED_PRE",
            "default_value": "true",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5"
        },
        {
            "name": "Remove Exiled Updater?",
            "description": "Exiled updater sometimes causes problems with pterodactyl, this will automatically remove it if you want it to.",
            "env_variable": "REMOVE_UPDATER",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5"
        },
        {
            "name": "Install Discord Integration Bot?",
            "description": "Whether or not to install the Discord Integration bot.",
            "env_variable": "INSTALL_BOT",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5"
        },
        {
            "name": "Save Discord Bot Configs?",
            "description": "Saves your discord integration configs when you reinstall your server so they aren't deleted.",
            "env_variable": "CONFIG_SAVER",
            "default_value": "true",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5"
        },
        {
            "name": "Install Discord Integration Plugin?",
            "description": "Intstalls the discord integration plugin.",
            "env_variable": "INSTALL_INTEGRATION",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5"
        },
        {
            "name": "Install Admin Tools?",
            "description": "Automatically installs\/updates admin tools.",
            "env_variable": "INSTALL_ADMINTOOLS",
            "default_value": "true",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5"
        },
        {
            "name": "Install Common Utilities Plugin?",
            "description": "Automatically installs\/updates common utilities.",
            "env_variable": "INSTALL_UTILITIES",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5"
        },
        {
            "name": "Install SCPStats?",
            "description": "Whether or not to install SCPStats.\r\nMore setup info here: https:\/\/github.com\/SCPStats\/Plugin\/wiki",
            "env_variable": "INSTALL_SCPSTATS",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5"
        }
    ]
}